version: '3.4'

services:
  flask:
    build: ./
    container_name: flask
    environment:
      FLASK_ENV: development
      FLASK_APP: app/main
      UWSGI_INI: ./local.ini
    volumes:
      - "./:/app"
    depends_on:
      - redis
    ports:
      - "5000:5000"

  worker:
    build:
      context: ./
      dockerfile: Dockerfile
    working_dir: /app
    command: celery -A app.tasks worker -l info -E
    environment:
      CELERY_BROKER_URL: redis://127.0.0.1
      CELERY_RESULT_BACKEND: redis://127.0.0.1
    depends_on:
      - redis
    # networks:
    #   - redis_nw
    network_mode: host
    volumes: ["./:/app"]
  beat:
    build:
      context: ./
      dockerfile: Dockerfile
    working_dir: /app
    command: celery -A app.tasks beat -l info
    environment:
      CELERY_BROKER_URL: redis://127.0.0.1
      CELERY_RESULT_BACKEND: redis://127.0.0.1
    depends_on:
      - redis
    # networks:
    #   - redis_nw
    network_mode: host
    volumes: ["./:/app"]
  monitor:
    build:
      context: ./
      dockerfile: Dockerfile
    working_dir: /app
    ports:
     - "5555:5555"
    command:  ['celery', 'flower', '-A', 'app.tasks']
    environment:
      CELERY_BROKER_URL: redis://127.0.0.1:6379/0
      CELERY_RESULT_BACKEND: redis://127.0.0.1:6379/0
    depends_on:
      - redis
      - worker
    # networks:
    #   - redis_nw
    network_mode: host
    volumes: ["./:/app"]
  redis:
    image: redis:alpine
    ports:
     - "6379:6379"
    # networks:
    #   - redis_nw




networks:
  redis_nw:
    driver: bridge